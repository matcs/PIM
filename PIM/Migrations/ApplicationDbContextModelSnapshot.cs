// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIM.Data;

namespace PIM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("PIM.Models.Address", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddrCity")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("AddrNeighbohood")
                        .HasColumnType("VARCHAR(40)");

                    b.Property<string>("AddrNumber")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("AddrType")
                        .HasColumnType("VARCHAR(25)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZipCode")
                        .HasColumnType("VARCHAR(25)");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1L,
                            AddrCity = "São Paulo",
                            AddrNeighbohood = "Republica",
                            AddrNumber = "105B",
                            AddrType = "Rua",
                            UserId = 1L,
                            ZipCode = "01045001"
                        },
                        new
                        {
                            AddressId = 2L,
                            AddrCity = "São Paulo",
                            AddrNeighbohood = "Pinheiros",
                            AddrNumber = "125",
                            AddrType = "Avenida",
                            UserId = 2L,
                            ZipCode = "39100000"
                        },
                        new
                        {
                            AddressId = 3L,
                            AddrCity = "Osasco",
                            AddrNeighbohood = "Vila Yara",
                            AddrNumber = "463",
                            AddrType = "Rua",
                            UserId = 3L,
                            ZipCode = "06026050"
                        });
                });

            modelBuilder.Entity("PIM.Models.Administrator", b =>
                {
                    b.Property<long>("AdministratorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("AdministratorId");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("PIM.Models.Contract", b =>
                {
                    b.Property<long>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ContractTerms")
                        .HasColumnType("VARBINARY(MAX)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("ContractId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("PIM.Models.Country", b =>
                {
                    b.Property<long>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountryName")
                        .HasColumnType("VARCHAR(35)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1L,
                            AddressId = 1L,
                            CountryName = "Brasil"
                        },
                        new
                        {
                            CountryId = 2L,
                            AddressId = 2L,
                            CountryName = "Brasil"
                        },
                        new
                        {
                            CountryId = 3L,
                            AddressId = 3L,
                            CountryName = "Brasil"
                        });
                });

            modelBuilder.Entity("PIM.Models.CryptoCurrency", b =>
                {
                    b.Property<long>("CryptoCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CryptoCurrencyId");

                    b.ToTable("CryptoCurrencies");
                });

            modelBuilder.Entity("PIM.Models.Customer", b =>
                {
                    b.Property<long>("CustumersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AccountStatus")
                        .HasColumnType("bit");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CustumersId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustumersId = 1L,
                            AccountStatus = false,
                            UserId = 1L
                        },
                        new
                        {
                            CustumersId = 2L,
                            AccountStatus = true,
                            UserId = 2L
                        },
                        new
                        {
                            CustumersId = 3L,
                            AccountStatus = true,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("PIM.Models.IdentityCard", b =>
                {
                    b.Property<string>("IdentityCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NVARCHAR(40)");

                    b.Property<string>("Identification")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("IndividualTaxpayerRegistration")
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<string>("IssuingBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("IdentityCardId");

                    b.HasIndex("IndividualTaxpayerRegistration")
                        .IsUnique()
                        .HasFilter("[IndividualTaxpayerRegistration] IS NOT NULL");

                    b.ToTable("IdentityCards");

                    b.HasData(
                        new
                        {
                            IdentityCardId = "abc",
                            Identification = "190471001",
                            IndividualTaxpayerRegistration = "53925227008",
                            IssuingBody = "SSP",
                            ShippingDate = new DateTime(2000, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            IdentityCardId = "abc1",
                            Identification = "362932888",
                            IndividualTaxpayerRegistration = "62472128010",
                            IssuingBody = "SSP",
                            ShippingDate = new DateTime(1995, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            IdentityCardId = "abc2",
                            Identification = "362932888",
                            IndividualTaxpayerRegistration = "06810592067",
                            IssuingBody = "SSP",
                            ShippingDate = new DateTime(2006, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("PIM.Models.PaymentReceipt", b =>
                {
                    b.Property<string>("PaymentReceiptsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<long?>("CustomerCustumersId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentReceiptsId");

                    b.HasIndex("CustomerCustumersId");

                    b.ToTable("PaymentReceipts");
                });

            modelBuilder.Entity("PIM.Models.State", b =>
                {
                    b.Property<long>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("StateName")
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("StateId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1L,
                            AddressId = 1L,
                            StateName = "São Paulo"
                        },
                        new
                        {
                            StateId = 2L,
                            AddressId = 2L,
                            StateName = "São Paulo"
                        },
                        new
                        {
                            StateId = 3L,
                            AddressId = 3L,
                            StateName = "São Paulo"
                        });
                });

            modelBuilder.Entity("PIM.Models.Telephone", b =>
                {
                    b.Property<long>("TelephoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DDD")
                        .HasColumnType("VARCHAR(5)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("VARCHAR(11)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("TelephoneId");

                    b.ToTable("Telephones");

                    b.HasData(
                        new
                        {
                            TelephoneId = 1L,
                            DDD = "011",
                            TelephoneNumber = "99507-9350",
                            UserId = 1L
                        },
                        new
                        {
                            TelephoneId = 2L,
                            DDD = "011",
                            TelephoneNumber = "98732-0893",
                            UserId = 2L
                        },
                        new
                        {
                            TelephoneId = 3L,
                            DDD = "011",
                            TelephoneNumber = "99970-7434",
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("PIM.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("CPF")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(30)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("First_Name")
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("Last_Name")
                        .HasColumnType("VARCHAR(70)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Password")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .HasColumnType("VARCHAR(15)");

                    b.Property<string>("SocialName")
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "ae6154b5-183b-4177-9cc7-e09cb1a09300",
                            BirthDay = new DateTime(1999, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "65519709076",
                            ConcurrencyStamp = "25873d55-201a-43f7-98e5-b5868a4fdd7c",
                            Email = "ezratmp+lath6@gmail.com",
                            EmailConfirmed = false,
                            First_Name = "Mike",
                            Password = "pass",
                            PhoneNumberConfirmed = false,
                            Role = "USER",
                            SocialName = "null"
                        },
                        new
                        {
                            Id = "fc9f69b8-f2b2-471d-9754-25d29efb57f1",
                            BirthDay = new DateTime(1985, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "82124778005",
                            ConcurrencyStamp = "f88d6fce-d993-4291-90fd-638c23fc0673",
                            Email = "lengtmp+lue5n@gmail.com",
                            EmailConfirmed = false,
                            First_Name = "Mackenzie",
                            Password = "passWORLD",
                            PhoneNumberConfirmed = false,
                            Role = "USER",
                            SocialName = "null"
                        },
                        new
                        {
                            Id = "7b322217-7585-46b5-ab8a-f865ba7039a7",
                            BirthDay = new DateTime(2000, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CPF = "58113438092",
                            ConcurrencyStamp = "d79c5d77-8c0a-4129-838e-7f3a62a95912",
                            Email = "banetmp+nqzlb@gmail.com",
                            EmailConfirmed = false,
                            First_Name = "Alexia",
                            Password = "p4ssw0rld",
                            PhoneNumberConfirmed = false,
                            Role = "USER",
                            SocialName = "null"
                        });
                });

            modelBuilder.Entity("PIM.Models.Wallet", b =>
                {
                    b.Property<long>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomersId")
                        .HasColumnType("bigint");

                    b.Property<double>("WalletBalance")
                        .HasColumnType("float");

                    b.HasKey("WalletId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("PIM.Models.WorkRecordBooklet", b =>
                {
                    b.Property<long>("WorkRecordBookletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AdministratorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<string>("Serial")
                        .HasColumnType("NVARCHAR(12)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkRecordBookletId");

                    b.ToTable("WorkRecordBooklets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PIM.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIM.Models.PaymentReceipt", b =>
                {
                    b.HasOne("PIM.Models.Customer", null)
                        .WithMany("PaymentReceipts")
                        .HasForeignKey("CustomerCustumersId");
                });
#pragma warning restore 612, 618
        }
    }
}
